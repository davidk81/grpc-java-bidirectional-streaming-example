group 'example.bidrectional.grpc'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: "com.google.osdetector"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile group: 'commons-io', name: 'commons-io', version: '2.5'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

def tcnative_classifier = osdetector.classifier
// Fedora variants use a different soname for OpenSSL than other linux distributions
// (see http://netty.io/wiki/forked-tomcat-native.html).
if (osdetector.os == "linux" && osdetector.release.isLike("fedora")) {
    tcnative_classifier += "-fedora"
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    }
}

sourceSets {
    main {
        proto {
            srcDirs 'src/main/proto'
        }
        java {
            // include self written and generated code
            srcDirs "$projectDir/src/gen/main/java", "$projectDir/src/gen/main/grpc"
        }
    }
    // remove the test configuration - at least in your example you don't have a special test proto file
}

protobuf {
    generatedFilesBaseDir = "$projectDir/src/gen"
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                // To generate deprecated interfaces and static bindService method,
                // turn the enable_deprecated option to true below:
                option 'enable_deprecated=false'
            }
        }
    }
}