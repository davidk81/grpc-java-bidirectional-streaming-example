group 'example.bidrectional.grpc'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'com.google.protobuf'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

def grpcVersion = '1.35.0'
def protocVersion = '3.12.0'

dependencies {
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile 'javax.annotation:javax.annotation-api:1.3.2' 
    compile group: 'commons-io', name: 'commons-io', version: '2.5'

    compile group: 'org.eclipse.jetty.http2', name: 'http2-client', version: '9.4.7.v20170914'
    compile group: 'org.eclipse.jetty.http2', name: 'http2-http-client-transport', version: '9.4.7.v20170914'
    compile group: 'org.mortbay.jetty.alpn', name: 'alpn-boot', version: '8.1.11.v20170118'


    testCompile group: 'junit', name: 'junit', version: '4.12'
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.14'
    }
}

sourceSets {
    main {
        proto {
            srcDirs 'src/main/proto'
        }
        java {
            // include self written and generated code
            srcDirs "$projectDir/src/gen/main/java", "$projectDir/src/gen/main/grpc"
        }
    }
    // remove the test configuration - at least in your example you don't have a special test proto file
}

protobuf {
    generatedFilesBaseDir = "$projectDir/src/gen"
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                // To generate deprecated interfaces and static bindService method,
                // turn the enable_deprecated option to true below:
                option 'enable_deprecated=false'
            }
        }
    }
}

task runServer(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "GrpcExampleServer"
    systemProperty 'host', System.properties['host']
    systemProperty 'port', System.properties['port']
}

task runClient(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "GrpcExampleClient"
    systemProperty 'host', System.properties['host']
    systemProperty 'port', System.properties['port']
}

task runHeartbeat(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "HeartbeatCheckHttp2"
}